{"mappings":"AAAaA,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAON,IANA,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAMH,EAANG,OAAQC,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAEtBC,EAAY,IAAIC,KAEhBC,EAAW,GACRC,EAAIJ,EAAOK,MAAOD,EAAI,EAAGA,IAChCD,EAASG,KAAKF,GAEhBG,YAAW,WACTA,YAAW,WACTJ,EAASK,SAAQ,SAAUC,GACzB,IAAuBC,EAAUC,GAAVD,EAqBTE,KAAKF,SArBcC,EAqBJC,KAAKD,MApBzB,IAAIE,SAAQ,SAACC,EAASC,IAC3B,SAASC,EAAUC,GACjBP,EAAWD,EACX,IAAMS,EAAe,IAAIhB,KACzBS,EAAQO,EAAaC,UAAYlB,EAAUkB,UACrBC,KAAKC,SAAW,GAGpCP,EAAQ,CAAEJ,WAAUC,UAEpBI,EAAO,CAAEL,WAAUC,UAGjBM,EAAQ,GACVD,EAAUC,EAAQ,E,CAGtBD,CAAUhB,EAAOK,M,KAIlBiB,MAAK,SAAAC,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MACjBa,QAAQC,IAAI,uBAAwCC,OAAfhB,EAAS,QAAYgB,OAANf,EAAM,M,IAE3DgB,OAAM,SAAAJ,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MAClBa,QAAQC,IAAI,sBAAqCC,OAAfhB,EAAS,QAAYgB,OAANf,EAAM,M,SAG5DZ,EAAKM,M,GACPP,EAAOO,M","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay2, step, amount },\n  } = event.currentTarget;\n  const clickDate = new Date();\n\n  const promises = [];\n  for (let i = amount.value; i > 0; i--) {\n    promises.push(i);\n  }\n  setTimeout(() => {\n    setTimeout(() => {\n      promises.forEach(function (e) {\n        function createPromise(position, delay) {\n          return new Promise((resolve, reject) => {\n            function countDown(count) {\n              position = e;\n              const positionDate = new Date();\n              delay = positionDate.getTime() - clickDate.getTime();\n              const shouldResolve = Math.random() > 0.3;\n\n              if (shouldResolve) {\n                resolve({ position, delay });\n              } else {\n                reject({ position, delay });\n              }\n\n              if (count > 0) {\n                countDown(count - 1);\n              }\n            }\n            countDown(amount.value);\n          });\n        }\n        createPromise(this.position, this.delay)\n          .then(({ position, delay }) => {\n            console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          })\n          .catch(({ position, delay }) => {\n            console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n          });\n      });\n    }, step.value);\n  }, delay2.value);\n}\n// const elements = {\n//   delay: delay.value,\n//   step: step.value,\n//   amount: amount.value,\n// };\n\n// localStorage.setItem('elements', JSON.stringify(elements));\n\n// const savedElements = localStorage.getItem('elements');\n// const parsedElements = JSON.parse(savedElements);\n// console.log(parsedElements);\n\n// delay = parsedElements.delay;\n// step = parsedElements.step;\n// position = parsedElements.amount;\n"],"names":["document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay2","step","amount","clickDate","Date","promises","i","value","push","setTimeout","forEach","e","position","delay","this","Promise","resolve","reject","countDown","count","positionDate","getTime","Math","random","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.5719b376.js.map"}